name: Deploy to Site

on:
  push:
    branches:
      - master
  workflow_dispatch:
    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
permissions:
  contents: write

jobs:
  deloy-git:
    name: Delaoy to Github Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Update baseUrl
        run: |
          sed -i "s|baseUrl: '/'|baseUrl: '/fly-docs-next/'|" docusaurus.config.js
          sed -i "s|/js/pdfjs-dist@3.4.120/pdf.worker.min.js|/fly-docs-next/js/pdfjs-dist@3.4.120/pdf.worker.min.js|" src/components/PdfView/index.js
      - name: Install canvas dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Build website
        run: npm build

      - name: Revert baseUrl
        run: |
          sed -i "s|baseUrl: '/fly-docs-next/'|baseUrl: '/'|" docusaurus.config.js
          sed -i "s|/fly-docs-next/js/pdfjs-dist@3.4.120/pdf.worker.min.js|/js/pdfjs-dist@3.4.120/pdf.worker.min.js|" src/components/PdfView/index.js
      - name: Check for index.html
        run: |
          if [ ! -f build/index.html ]; then
            echo "index.html not found in build directory"
            exit 1
          fi
          echo "index.html found in build directory"

      - name: Delaoy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build

  deloy-firebase-cf:
    name: Delaoy to Firebase and Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Install canvas dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Build website
        run: npm build

      - name: Check for index.html
        run: |
          if [ ! -f build/index.html ]; then
            echo "index.html not found in build directory"
            exit 1
          fi
          echo "index.html found in build directory"

      - name: Delaoy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLY_DOCS_A131A }}
          channelId: live
          projectId: fly-docs-a131a

      - name: Delaoy to Cloudflare Pages
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npm install -g wrangler
          wrangler pages deploy build --project-name=fly-docs-next --commit-dirty=true --branch=main
